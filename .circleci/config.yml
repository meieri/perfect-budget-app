# # .circleci/config.yml
# version: 2.1
# jobs:
#   test:
#     executor: xcode-10
#     steps:
#       - setup
#       - fastlane:
#         lane: "test"
#       - run:
#           name: Code Coverage
#           when: always
#           command: |
#             cd app
#             bundle exec fastlane coverage
#       # Store xcov and slather Code Coverage HTML report artifacts
#       - store_artifacts:
#           path: /Users/distiller/project/app/build/xcov
#           destination: xcov
#       - store_artifacts:
#           path: /Users/distiller/project/app/build/slather
#           destination: slather
#       - store_artifacts:
#           path: /Users/distiller/project/app/build/scan
#           destination: scan
#       # Update Danger as soon as we have code coverage/tests, while waiting for screenshots to be generated
#       - run:
#           name: Danger
#           when: always
#           command: |
#             bundle exec danger
#       - run:
#           name: Upload to Codecov
#           when: always
#           command: bash <(curl -s https://codecov.io/bash) -f app/build/slather/cobertura.xml -X coveragepy -X gcov -X xcode      
#       - run:
#           name: Screenshots
#           when: always
#           command: |
#             cd app
#             bundle exec fastlane snapshot
#       - store_artifacts:
#           path: /Users/distiller/project/app/fastlane/screenshots
#           destination: screenshots
#       # Run Danger again once screenshots are complete
#       - run:
#           name: Danger
#           when: always
#           command: |
#             bundle exec danger
#       - run:
#           name: Post Screenshots to Slack
#           when: always
#           command: |
#             cd app
#             bundle exec fastlane slackshots
#             
#   integration:
#     executor: xcode-10
#     steps:
#       - setup
#       - run: cd app && bundle exec fastlane develop
#       - store_artifacts:
#           path: "${FL_OUTPUT_DIR}/Wellevate.ipa"
#   sprint:
#     executor: xcode-10
#     steps:
#       - setup
#       - fastlane:
#           lane: "sprint"
#       - store_artifacts:
#           path: "${FL_OUTPUT_DIR}/Wellevate.ipa"
#   beta:
#     executor: xcode-10
#     steps:
#       - setup
#       - fastlane:
#            lane: "beta"
#       - store_artifacts:
#           path: "${FL_OUTPUT_DIR}/Wellevate.ipa"
# 
# executors:
#   xcode-10:
#     working_directory: /Users/distiller/project
#     macos:
#       xcode: "10.2.1"
#     environment:
#       LC_ALL: en_US.UTF-8
#       LANG: en_US.UTF-8
#       FL_OUTPUT_DIR: /Users/distiller/project/output
#       DISABLE_COVERALLS: true
#     shell: /bin/bash --login -eo pipefail
# 
# commands:
#   setup:
#     description: "Shared setup"
#     steps:
#       - checkout
#       - restore-gems
#       # Make sure that the output directory exists
#       - run: mkdir $FL_OUTPUT_DIR
# 
#   restore-gems:
#     description: "Restore Ruby Gems"
#     steps:
#       - run:
#           name: Set Ruby Version
#           command:  echo "ruby-2.5" > ~/.ruby-version
#       - restore_cache:
#           key: 4-gems-{{ checksum "Gemfile.lock" }}
#       - run: bundle check || bundle install --path vendor/bundle
#       - save_cache:
#           key: 4-gems-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle
# 
#   fastlane:
#     description: "Runs specified Fastlane lane"
#     parameters:
#       lane:
#         type: string
#         default: "test"
#     steps:
#     - run:
#         name: Fastlane
#         command: |
#           cd app
#           bundle exec fastlane << parameters.lane >>
#   store-ipa:
#     description: "Stores .ipa file"
#     steps:
#       - store_artifacts:
#           path: "${FL_OUTPUT_DIR}/Wellevate.ipa"
# 
# workflows:
#   version: 2
#   integration:
#     jobs:
#       - test:
#           filters:
#             tags:
#               only: /.*/
#       - integration:
#           requires:
#             - test
#           filters:
#             branches:
#               only: develop
#       - sprint:
#           requires:
#             - test
#           filters:
#             branches:
#               ignore: /.*/
#             tags:
#               only: /sprint-.*/
#       - beta:
#           requires:
#             - test
#           filters:
#             branches:
#               ignore: /.*/
#             tags:
#               only: /beta-.*/
#
#
# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
jobs:
  build:

    # Specify the Xcode version to use
    macos:
      xcode: "8.3.3"

    steps:
      - checkout

      # Install CocoaPods
      - run:
          name: Install CocoaPods
          command: pod install

      # Build the app and run tests
      - run:
          name: Build and run tests
          command: fastlane scan
          environment:
            SCAN_DEVICE: iPhone 6
            SCAN_SCHEME: WebTests

      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: /tmp/test-results
          destination: scan-test-results
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs
